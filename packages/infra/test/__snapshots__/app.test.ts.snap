// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack matches snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CountBucketsTable09F12BD0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "TableName": "TestTinyMuStack-CountBucketsTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CreateShortUrlLambda0AED869B": {
      "DependsOn": [
        "CreateShortUrlLambdaServiceRoleDefaultPolicy64776861",
        "CreateShortUrlLambdaServiceRole009F038F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[S3 KEY]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNT_BUCKETS_TABLE_NAME": {
              "Ref": "CountBucketsTable09F12BD0",
            },
            "URLS_TABLE_NAME": {
              "Ref": "UrlsTable60368425",
            },
          },
        },
        "FunctionName": "TestTinyMuStack-CreateShortUrlLambda",
        "Handler": "index.createShortUrlHandler",
        "Role": {
          "Fn::GetAtt": [
            "CreateShortUrlLambdaServiceRole009F038F",
            "Arn",
          ],
        },
        "Runtime": "provided.al2023",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CreateShortUrlLambdaServiceRole009F038F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CreateShortUrlLambdaServiceRoleDefaultPolicy64776861": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CountBucketsTable09F12BD0",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "UrlsTable60368425",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CreateShortUrlLambdaServiceRoleDefaultPolicy64776861",
        "Roles": [
          {
            "Ref": "CreateShortUrlLambdaServiceRole009F038F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetLongUrlLambdaC5112ECB": {
      "DependsOn": [
        "GetLongUrlLambdaServiceRoleDefaultPolicy0DF8ACD8",
        "GetLongUrlLambdaServiceRole025A1693",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[S3 KEY]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "URLS_TABLE_NAME": {
              "Ref": "UrlsTable60368425",
            },
          },
        },
        "FunctionName": "TestTinyMuStack-GetLongUrlLambda",
        "Handler": "index.getLongUrlHandler",
        "Role": {
          "Fn::GetAtt": [
            "GetLongUrlLambdaServiceRole025A1693",
            "Arn",
          ],
        },
        "Runtime": "provided.al2023",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetLongUrlLambdaServiceRole025A1693": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetLongUrlLambdaServiceRoleDefaultPolicy0DF8ACD8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UrlsTable60368425",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetLongUrlLambdaServiceRoleDefaultPolicy0DF8ACD8",
        "Roles": [
          {
            "Ref": "GetLongUrlLambdaServiceRole025A1693",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HttpAPI8D545486": {
      "Properties": {
        "CorsConfiguration": {
          "AllowMethods": [
            "GET",
            "POST",
          ],
          "AllowOrigins": [
            "https://tiny.mu",
            "http://localhost",
          ],
        },
        "Name": "TestTinyMuStack-HttpAPI",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "HttpAPIDefaultStage1BC7D78F": {
      "Properties": {
        "ApiId": {
          "Ref": "HttpAPI8D545486",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "HttpAPIGETgetlongurlshortUrlIdA24C2A64": {
      "Properties": {
        "ApiId": {
          "Ref": "HttpAPI8D545486",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "GET /get-long-url/{shortUrlId}",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpAPIGETgetlongurlshortUrlIdGetLongUrlLambdaIntegrationF0B88EFF",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpAPIGETgetlongurlshortUrlIdGetLongUrlLambdaIntegrationF0B88EFF": {
      "Properties": {
        "ApiId": {
          "Ref": "HttpAPI8D545486",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetLongUrlLambdaC5112ECB",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpAPIGETgetlongurlshortUrlIdGetLongUrlLambdaIntegrationPermission117D995A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetLongUrlLambdaC5112ECB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "HttpAPI8D545486",
              },
              "/*/*/get-long-url/{shortUrlId}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpAPIPOSTcreateshorturlCreateShortUrlLambdaIntegration86374E1F": {
      "Properties": {
        "ApiId": {
          "Ref": "HttpAPI8D545486",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateShortUrlLambda0AED869B",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpAPIPOSTcreateshorturlCreateShortUrlLambdaIntegrationPermissionF47EDEC2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateShortUrlLambda0AED869B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "HttpAPI8D545486",
              },
              "/*/*/create-short-url",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "HttpAPIPOSTcreateshorturlF335CED1": {
      "Properties": {
        "ApiId": {
          "Ref": "HttpAPI8D545486",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "POST /create-short-url",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpAPIPOSTcreateshorturlCreateShortUrlLambdaIntegration86374E1F",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "UrlsTable60368425": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "shortUrlId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "shortUrlId",
            "KeyType": "HASH",
          },
        ],
        "TableName": "TestTinyMuStack-UrlsTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
